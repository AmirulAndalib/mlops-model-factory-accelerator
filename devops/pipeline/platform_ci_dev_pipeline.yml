
parameters:
 - name: exec_environment
   displayName: "Execution Environment"
   default: "dev"
 - name: model_type
   displayName: "type of model to execute"
 - name: is_batch_deployment
   displayName: "determine real or batch deployment"

stages:
    - stage: execute_training_job
      displayName: execute_training_job
      dependsOn: 
      - variable_generation
      variables:
      - template: templates/experiment_variables.yml
      jobs:
      - job: Execute_ml_Job_Pipeline
        steps:
        - template: templates/get_connection_details.yml
        - template: templates/configure_azureml_agent.yml
        - template: templates/execute_mlops_pipeline.yml
          parameters:
            script_parameter: |
              python -m mlops.${{ parameters.model_type }}.src.mlops_pipeline \
                --subscription_id $(SUBSCRIPTION_ID) \
                --resource_group_name $(RESOURCE_GROUP_NAME) \
                --workspace_name $(WORKSPACE_NAME) \
                --cluster_name $(CLUSTER_NAME) \
                --cluster_size $(CLUSTER_SIZE) \
                --cluster_region $(CLUSTER_REGION) \
                --build_reference $(BUILD.BUILDID) \
                --deploy_environment ${{parameters.exec_environment}} \
                --experiment_name $(EXPERIMENT_NAME) \
                --display_name $(DISPLAY_NAME) \
                --wait_for_completion True \
                --environment_name $(ENVIRONMENT_NAME) \
                --env_base_image_name $(ENV_BASE_IMAGE_NAME) \
                --model_name $(MODEL_NAME) \
                --conda_path $(CONDA_PATH) \
                --output_file run_id.txt
        - task: AzureCLI@2
          displayName: Read Run ID
          name: read_run_id
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(System.DefaultWorkingDirectory)
            inlineScript: |
              readarray arr <"run_id.txt"
              run_name=${arr[0]}
              echo $run_name

              echo "##vso[task.setvariable variable=RUN_NAME;isOutput=true;]$run_name"

    - stage: deploy
      displayName: Execute_local_deployment
      dependsOn: 
      - variable_generation
      - execute_training_job
      variables:
      - template: templates/experiment_variables.yml
      - name: run_id_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ]
      jobs:
      - deployment: ApproveDeployment
        environment: deployenv
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo "Approving will deploy the model to the edge"

      - template: templates/aml_real_deployment.yml  # Template reference
        parameters:
          SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
          RESOURCE_GROUP_NAME: $(RESOURCE_GROUP_NAME)
          WORKSPACE_NAME: $(WORKSPACE_NAME)
          MODEL_TYPE: ${{ parameters.model_type }}
          ENDPOINT_NAME: $(ENDPOINT_NAME)
          DEPLOYMENT_NAME: $(DEPLOYMENT_NAME)
          DEPLOYMENT_TRAFFIC_ALLOCATION: $(DEPLOYMENT_TRAFFIC_ALLOCATION)
          DEPLOYMENT_VM_SIZE: $(DEPLOYMENT_VM_SIZE)
          MODEL_NAME: $(MODEL_NAME)
          DEPLOYMENT_BASE_IMAGE_NAME: $(DEPLOYMENT_BASE_IMAGE_NAME)
          DEPLOYMENT_CONDA_PATH: $(DEPLOYMENT_CONDA_PATH)
          SCORE_DIR: $(SCORE_DIR)
          SCORE_FILE_NAME: $(SCORE_FILE_NAME)
          TEST_FILE_PATH: $(TEST_FILE_PATH)
          RUN_ID: $(run_id_from_submit_job)
          IS_BATCH_DEPLOYMENT: ${{parameters.is_batch_deployment}} 
          BATCH_DEPLOYMENT_CONFIG: $(BATCH_DEPLOYMENT_CONFIG)
          DEPLOY_ENVIRONMENT: ${{parameters.exec_environment}} 
          DATA_CONFIG_PATH:  $(DATA_CONFIG_PATH) 